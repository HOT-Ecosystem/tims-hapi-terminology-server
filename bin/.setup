# https://stackoverflow.com/questions/5947742/how-to-change-the-output-color-of-echo-in-linux
#Black        0;30     Dark Gray     1;30
#Red          0;31     Light Red     1;31
#Green        0;32     Light Green   1;32
#Brown/Orange 0;33     Yellow        1;33
#Blue         0;34     Light Blue    1;34
#Purple       0;35     Light Purple  1;35
#Cyan         0;36     Light Cyan    1;36
#Light Gray   0;37     White         1;37
export YELLOW='\033[0;33m'
export RED='\033[0;31m'
export GREEN='\033[0;32m'
export NO_COLOR='\033[0m'

function  loginfo() {
  echo -e "${GREEN}INFO : $1${NO_COLOR}"
}
export -f loginfo

function  logwarn() {
  echo -e "${YELLOW}WARN : $1${NO_COLOR}"
}
export -f logwarn

function  logerror() {
  echo -e "${RED}ERROR: $1${NO_COLOR}"
}
export -f logerror


# OpenSearch warn if swap is on
#
if free | awk '/^Swap:/ {exit !$2}'; then
    logwarn "swap is on but OpenSearch recommends it off: https://opensearch.org/docs/latest/install-and-configure/install-opensearch/docker/#important-host-settings"
fi

# OpenSearch error and exit if memory maps lower than recommended.
read -r mem_maps < /proc/sys/vm/max_map_count
if [[ ${mem_maps} -lt 262144 ]]; then
    logerror "memory maps value is ${mem_maps}"
    logerror "memory maps is less than what OpenSearch recommends: https://opensearch.org/docs/latest/install-and-configure/install-opensearch/docker/#important-host-settings"
    logerror "exiting 10"
    exit 10
fi

# Load environment as needed
[[  -f env-local ]] && . ./env-local
. ./env

# Postgresql setup
if [[ ! -d ${HCS_PG_IMAGE_DIR} ]]; then
  cp -pR "${HCS_PG_IMAGE_DIR_DEFAULT}" "${HCS_PG_IMAGE_DIR}" # https://unix.stackexchange.com/questions/43605/how-do-i-copy-a-folder-keeping-owners-and-permissions-intact#comments-43608
fi
mkdir -p "${HCS_PG_CONTAINER_DIR}"/data-volume

# OpenSearch setup
#if [[ ! -d ${HCS_OSREST_IMAGE_DIR} ]]; then
#  cp -pR "${HCS_OSREST_IMAGE_DIR_DEFAULT}" "${HCS_OSREST_IMAGE_DIR}"
#fi
#mkdir -p "${HCS_OSREST_CONTAINER_DIR}"/data-volume

# ElasticSearch setup
if [[ ! -d ${HCS_ESREST_IMAGE_DIR} ]]; then
  cp -pR "${HCS_ESREST_IMAGE_DIR_DEFAULT}" "${HCS_ESREST_IMAGE_DIR}"
fi
mkdir -p "${HCS_ESREST_CONTAINER_DIR}"/data-volume

# OpenSearch Dashboards setup
if [[ ! -d ${HCS_OSDBS_IMAGE_DIR} ]]; then
  cp -pR "${HCS_OSDBS_IMAGE_DIR_DEFAULT}" "${HCS_OSDBS_IMAGE_DIR}"
fi
#mkdir -p "${HCS_OSDBS_CONTAINER_DIR}"/data-volume

# HAPI Run setup
if [[ ! -d ${HCS_HAPIRUN_IMAGE_DIR} ]]; then
  cp -pR "${HCS_HAPIRUN_IMAGE_DIR_DEFAULT}" "${HCS_HAPIRUN_IMAGE_DIR}"
fi
mkdir -p "${HCS_HAPIRUN_CONTAINER_DIR}"
